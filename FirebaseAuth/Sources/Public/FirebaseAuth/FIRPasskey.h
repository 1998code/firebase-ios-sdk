/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#import <Foundation/Foundation.h>
#import "FIRPasskeyInfo.h"

NS_ASSUME_NONNULL_BEGIN

NS_SWIFT_NAME(Passkey) API_UNAVAILABLE(macos, tvos, watchos) @interface FIRPasskey : NSObject

/**
 @brief a list of enrolled passkeys.
 */
@property(nonatomic, readonly) NSArray<FIRPasskeyInfo *> *enrolledPasskeys;

/**
 @fn getKeyCreationRequestWithCompletion:completion
 @brief Create an registration request for enroll.
 */
- (void)getKeyCreationRequestWithCompletion:
    (nullable void (^)(
        ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest *_Nullable request,
        NSError *_Nullable error))completion API_AVAILABLE(ios(15.0));

/**
 @fn enrollPasskeyWithPlatformCredential:completion
 @brief Register the platform credential with GCIP for current user.
 @param platformCredential the credential generated by keyChain.
 */
- (void)enrollPasskeyWithPlatformCredential:
            (ASAuthorizationPlatformPublicKeyCredentialRegistration *)platformCredential
                                 completion:
                                     (nullable void (^)(FIRAuthDataResult *_Nullable authResult,
                                                        NSError *_Nullable error))completion
    API_AVAILABLE(ios(15.0));

/**
 @fn unenrollPasskeyWithCredentialID:completion
 @brief To unenroll a passkey with platform credential.
 @param credentialID the passkey credential ID to unenroll.
 */
- (void)unenrollPasskeyWithCredentialID:(NSData *)credentialID
                             completion:(nullable void (^)(NSError *_Nullable error))completion
    API_AVAILABLE(ios(15.0));

@end
NS_ASSUME_NONNULL_END
